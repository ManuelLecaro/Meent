// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// QRGenerator is an autogenerated mock type for the QRGenerator type
type QRGenerator struct {
	mock.Mock
}

// CreateQR provides a mock function with given fields: ctx, data, name
func (_m *QRGenerator) CreateQR(ctx context.Context, data map[string]interface{}, name string) error {
	ret := _m.Called(ctx, data, name)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]interface{}, string) error); ok {
		r0 = rf(ctx, data, name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewQRGenerator interface {
	mock.TestingT
	Cleanup(func())
}

// NewQRGenerator creates a new instance of QRGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewQRGenerator(t mockConstructorTestingTNewQRGenerator) *QRGenerator {
	mock := &QRGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
